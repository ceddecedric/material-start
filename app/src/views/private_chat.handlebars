<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link href="https://fonts.googleapis.com/css?family=Roboto:regular,bold,italic,thin,light,bolditalic,black,medium&amp;lang=en" rel="stylesheet">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link rel="stylesheet" href="/app/assets/ressource/material.min.css">
    <link rel="stylesheet" href="/app/assets/ressource/myCss.css"/>
    <title>Qwirk</title>
    <script src="https://simplewebrtc.com/latest-v2.js"></script>
    <script src="http://cdn.peerjs.com/0.3/peer.js"></script>

    <style>
          .volume {
        position: absolute;
        left: 15%;
        width: 70%;
        bottom: 2px;
        height: 10px;
      }
    </style>

</head>
<body>
<div class="demo-layout mdl-layout mdl-js-layout mdl-layout--fixed-drawer mdl-layout--fixed-header">
    <header class="demo-header mdl-layout__header mdl-color--grey-100 mdl-color-text--grey-600">
        <div class="mdl-layout__header-row">
            <span class="mdl-layout-title">Private Chatroom</span>
            <div class="mdl-layout-spacer"></div>
            <label class="mdl-button mdl-js-button mdl-button--icon  dialog-button1">
                <i class="material-icons">group_add</i>
            </label>
            <label class="mdl-button mdl-js-button mdl-button--icon  dialog-button">
                <i class="material-icons">add</i>
            </label>

            <div class="mdl-textfield mdl-js-textfield mdl-textfield--expandable">
                <label class="mdl-button mdl-js-button mdl-button--icon dialog-button" for="search">
                    <i class="material-icons">search</i>
                </label>
                <div class="mdl-textfield__expandable-holder">
                    <input class="mdl-textfield__input" type="text" id="search">
                    <label class="mdl-textfield__label" for="search">Enter your query...</label>
                </div>
            </div>
            <button class="mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--icon" id="hdrbtn">
                <i class="material-icons">more_vert</i>
            </button>
            <ul class="mdl-menu mdl-js-menu mdl-js-ripple-effect mdl-menu--bottom-right" for="hdrbtn">
                <li class="mdl-menu__item">About</li>
                <li class="mdl-menu__item">Legal information</li>
            </ul>
        </div>
    </header>
    <dialog id="dialog" class="mdl-dialog">
        <h3 class="mdl-dialog__title">Invitations</h3>

        <div class="mdl-dialog__content">
            <div class="form_container center ">

                <form method="post" action="">
                    <fieldset name="formulaire" id="formulaire">

                        <p>
                            <label for="labelemail">Email</label>
                            <br>
                            <input type="email" name="email" id="email">
                            <br>
                            <label for="labelcomment">Message Invitation</label>
                            <br>
                            <input type="text" name="comment" id="comment">
                            <br>
                            <input id="login_button" type="submit" value="Send" class="btn-large waves-effect waves-light green">
                        </p>
                    </fieldset>
                </form>
                <!--<ul>
            {{#each users}}
                <li>
                Name : {{name}} <br/> E-mail : {{email}} <br/>
                </li>
            {{/each}}
            </ul>-->
            </div>
        </div>
        <div class="mdl-dialog__actions">
            <button type="button" class="mdl-button">Close</button>

        </div>
    </dialog>
    
    <dialog id="dialog1" class="mdl-dialog">
        <h3 class="mdl-dialog__title">Create group</h3>

        <div class="mdl-dialog__content">
            <div class="form_container center ">

                <form method="post" action="">
                    <fieldset name="formulaire" id="formulaire">

                        <p>

                        <div class="inputt mdl-textfield mdl-js-textfield">
                            <input class="mdl-textfield__input" type="text" name="name" id="name" />
                            <label class="mdl-textfield__label" for="name">Name of the group</label>
                        </div>
                        <br>
                        <input id="login_button" type="submit" value="Create" class="mdl-button mdl-js-button mdl-button--raised mdl-button--colored">
                        </p>
                    </fieldset>
                </form>
            </div>
        </div>
        <div class="mdl-dialog__actions">
            <button type="button" class="mdl-button close" >Close</button>

        </div>
    </dialog>

    <div class="demo-drawer mdl-layout__drawer mdl-color--blue-grey-900 mdl-color-text--blue-grey-50">
      <header class="demo-drawer-header">
          <img src="/images/slide1.jpeg" class="demo-avatar">
          <div class="demo-avatar-dropdown">
              <span>hi!&nbsp;{{user.name}}</span>
              <div class="mdl-layout-spacer"></div>
              <button id="accbtn" class="mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--icon">
                  <i class="material-icons" role="presentation">arrow_drop_down</i>
                  <span class="visuallyhidden">Accounts</span>
              </button>
              <ul class="mdl-menu mdl-menu--bottom-right mdl-js-menu mdl-js-ripple-effect" for="accbtn">
                  <li class="mdl-menu__item"><a href="/profil" class="mdl-navigation__link">Profil</a></li>
                  <li class="mdl-menu__item" ><a href="/status" class="mdl-navigation__link">Status</a></li>
                  <li class="mdl-menu__item"><a href="/logout" class="mdl-navigation__link">Deconnexion</a></li>
              </ul>
          </div>
      </header>
        <nav class="demo-navigation mdl-navigation mdl-color--blue-grey-800">
            <a class="mdl-navigation__link" href="/inbox"><i class="mdl-color-text--blue-grey-400 material-icons" role="presentation">inbox</i>Inbox</a>
            <a class="mdl-navigation__link" href="/people"><i class="mdl-color-text--blue-grey-400 material-icons" role="presentation">person</i>People</a>

            <a class="mdl-navigation__link" href="/private_chat"><i class="mdl-color-text--blue-grey-400 material-icons" role="presentation">inbox</i>Private Chatroom</a>
            <a class="mdl-navigation__link" href="/public_chat"><i class="mdl-color-text--blue-grey-400 material-icons" role="presentation">forum</i>Public Chatroom</a>

            <div class="mdl-layout-spacer"></div>
            <a class="mdl-navigation__link" href=""><i class="mdl-color-text--blue-grey-400 material-icons" role="presentation">help_outline</i><span class="visuallyhidden">Help</span></a>
        </nav>
    </div>
    <main class="mdl-layout__content mdl-color--grey-100">
        <div class="mdl-grid demo-content">

        <video height="300" id="localVideo"></video>
        <div id="remotesVideos"></div>

        </div>
    </main>
</div>
<script>
  var webrtc = new SimpleWebRTC({
  // the id/element dom element that will hold "our" video
  localVideoEl: 'localVideo',
  // the id/element dom element that will hold remote videos
  remoteVideosEl: 'remotesVideos',
  // immediately ask for camera access
  autoRequestMedia: true
  });

  // we have to wait until it's ready
  webrtc.on('readyToCall', function () {
    // you can name it anything
    webrtc.joinRoom('your awesome room name');
  });

  // helper function to show the volume
  function showVolume(el, volume) {
      console.log('showVolume', volume, el);
      if (!el) return;
      if (volume < -45) volume = -45; // -45 to -20 is
      if (volume > -20) volume = -20; // a good range
      el.value = volume;
  }

  //peer
  // var peer = new Peer({key: 't9i0q9889mnuq5mi'});

  var peer = new Peer('pick-an-id', {key: 't9i0q9889mnuq5mi'}); 

  // show the remote volume
   var vol = document.createElement('meter');
   vol.id = 'volume_' + peer.id;
   vol.className = 'volume';
   vol.min = -45;
   vol.max = -20;
   vol.low = -40;
   vol.high = -25;
   container.appendChild(vol);

   webrtc.on('volumeChange', function (volume, treshold) {
    showVolume(document.getElementById('localVolume'), volume);
});

webrtc.on('remoteVolumeChange', function (peer, volume) {
    showVolume(document.getElementById('volume_' + peer.id), volume);
});
</script>

<script src="/bower_components/jquery/dist/jquery.js" type="text/javascript"></script>
<script src="/app/assets/ressource/material.min.js"></script>

<script>
    (function() {
        'use strict';
        var dialogButton = document.querySelector('.dialog-button');
        var dialog = document.querySelector('#dialog');
        if (! dialog.showModal) {
            dialogPolyfill.registerDialog(dialog);
        }
        dialogButton.addEventListener('click', function() {
            dialog.showModal();
        });
        dialog.querySelector('button:not([disabled])')
                .addEventListener('click', function() {
                    dialog.close();
                });
    }());
            (function() {
        'use strict';
        var dialogButton = document.querySelector('.dialog-button1');
        var dialog = document.querySelector('#dialog1');
        if (! dialog.showModal) {
            dialogPolyfill.registerDialog(dialog);
        }
        dialogButton.addEventListener('click', function() {
            dialog.showModal();
        });
        dialog.querySelector('button:not([disabled])')
                .addEventListener('click', function() {
                    dialog.close();
                });
    }());
</script>

<script type="text/javascript">
    function group(that) {
        var name = that.name;

        $.ajax({
            type : 'POST',
            url  : 'http://localhost:3000/private_chat',
            data : {name : name},
            success : function(data){

            },
            error : function(data) {
                alert("echec");
            }
        });
    }
    function refuser(that) {
        alert(that.id);
    }
</script>

</body>
